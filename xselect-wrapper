#/bin/sh

CMDNAME=`basename $0`
XSELCMD=.xselcmd.$$
XSEL=xselect

# Default Value
CUTOFF_COR2=8
REGION_FILE=""
COORD="sky"

USAGE()
{
	echo "Usage: $CMDNAME -e EXTRACT_TARGET [ -r REGION_FILE] [ -g GTI_FILE ] [ -c \"MIN_PI MAX_PI\"] [ -b BIN_SIZE ] [ -h EHK_FILE ] [ -C COR2 ] [ -s ] [ -d ] EVENT_FILE OUTPUT_FILE" 1>&2
}

while getopts e:r:c:b:h:g:C:sd OPT
do
	case "$OPT" in
		e)
			EXTRACT="TRUE"
			EXTRACT_TARGET="$OPTARG"
			;;
		r)
			REGION="TRUE"
			if [ ! -r $OPTARG ]; then
				echo "Region File: $REGION_FILE does not exist." 1>&2
				exit 1
			fi
			REGION_FILE=$REGION_FILE" $OPTARG"
			;;
		c)
			CUTOFF="TRUE"
			CUTOFF_PHA="$OPTARG"
			;;
		b)
			BIN="TRUE"
			BINSIZE="$OPTARG"
			;;
		h)
			HK="TRUE"
			HK_FILE="$OPTARG"
			;;
		g)
			GTI="TRUE"
			GTI_FILE="$GTI_FILE $OPTARG"
			;;
		C)
			COR2="TRUE"
			CUTOFF_COR2="$OPTARG"
			;;
		s)
			STRIP="TRUE"
			;;
		d)
			COORD="det"
			;;
		*)
			USAGE
			exit 1
			;;
	esac
done
shift $(($OPTIND - 1))

# Usage Check
if [ $# -lt 2 ]; then
	USAGE
	exit 1
fi

if [ "$EXTRACT" != "TRUE" ]; then
	USAGE
	exit 1
fi

if [ "$COR2" = "TRUE" -a "$HK" != "TRUE" ]; then
	echo "Please specify EHK file (-h) when screening by COR2." 
	exit 1
fi

# Event file(s)
IFS=' ' read -a EVENTS <<< $1
for e in ${EVENTS[@]}
do
	EVENT_DIRS+=(`dirname $e`)
	EVENT_FILES+=(`basename $e`)
	
	if [ -n "$LAST_DIR" ]; then
		if [ "$LAST_DIR" != `dirname $e` ]; then
			echo "Different directories cannot be mixed."
			exit 1
		fi
	fi

	LAST_DIR=`dirname $e`
done

REGION_CMD()
{
	if [ "$REGION" = "TRUE" ]; then
		for r in $REGION_FILE
		do
			cat <<EOF >>$XSELCMD
filter region $r
EOF
		done
	fi
}

CUTOFF_CMD()
{
	if [ "$CUTOFF" = "TRUE" ]; then
		cat <<EOF >>$XSELCMD
filter pha_cutoff $CUTOFF_PHA
EOF
	fi
}

COR_CMD()
{
	if [ "$HK" = "TRUE" ]; then
		cat <<EOF >>$XSELCMD
read hk
`dirname $HK_FILE`
`basename $HK_FILE`
yes

filter hk
COR2>$CUTOFF_COR2
EOF
	fi
}

GTI_CMD()
{
	if [ "$GTI" = "TRUE" ]; then
		cat <<EOF >>$XSELCMD
filter time file
$GTI_FILE
EOF
	fi
}

STRIP_CMD()
{
	if [ "$STRIP" = "TRUE" ]; then
		cat <<EOF >>$XSELCMD
select event "(STATUS%(2**19))<2**18"
EOF
	fi
}

COORD_CMD()
{
	cat <<EOF >>$XSELCMD
set image $COORD
EOF
}

# Output file check
if [ -r $2 ]; then
	echo "Output file $2 already exists." 1>&2
	exit 1
fi

# Main
case "$EXTRACT_TARGET" in
	[sS][pP][eE][cC])
		cat <<EOF > $XSELCMD
xsel
no
read events "${EVENT_FILES[@]}"
${EVENT_DIRS[0]}
EOF
		COORD_CMD
		REGION_CMD
		CUTOFF_CMD
		COR_CMD
		GTI_CMD
		cat <<EOF >> $XSELCMD
extract spec
save spec $2
no
quit
no
EOF
		;;
	[eE][vV][eE][nN][tT])
		cat <<EOF > $XSELCMD
xsel
no
read events "${EVENT_FILES[@]}"
${EVENT_DIRS[0]}
EOF
		STRIP_CMD
		COORD_CMD
		REGION_CMD
		CUTOFF_CMD
		COR_CMD
		GTI_CMD
		cat <<EOF >> $XSELCMD
extract event
save event $2
no
quit
no
EOF
		;;
	[lL][cC])
		if [ "$BIN" != "TRUE" ]; then
			BINSIZE=256
		fi
		cat <<EOF > $XSELCMD
xsel
no
read events "${EVENT_FILES[@]}"
${EVENT_DIRS[0]}
EOF
		COORD_CMD
		REGION_CMD
		CUTOFF_CMD
		COR_CMD
		GTI_CMD
		cat <<EOF >> $XSELCMD
set binsize $BINSIZE
extract curve
save curve $2
plot curve
/xw
wenviron `echo $2 | sed 's/^\([^\.]*\)\..*/\1/'`
quit
quit
no
EOF
		;;
	[iI][mM][aA][gG][eE])
		if [ "$BIN" != "TRUE" ]; then
			BINSIZE=8
		fi
		cat <<EOF > $XSELCMD
xsel
no
read events "${EVENT_FILES[@]}"
${EVENT_DIRS[0]}
EOF
		COORD_CMD
		REGION_CMD
		CUTOFF_CMD
		COR_CMD
		GTI_CMD
		cat <<EOF >> $XSELCMD
set xybinsize $BINSIZE
extract image
save image $2
quit
no
EOF
		;;
	*)
		echo "Specified target ($EXTRACT_TARGET) has not yet supported." 1>&2
		exit 1
		;;
esac

$XSEL < $XSELCMD
rm -f $XSELCMD

exit 0
